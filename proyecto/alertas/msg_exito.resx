<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sgqsSZP+BVUdG+ef/TYsAAAAAElFTkSuQmCC
</value>
  </data>
</root>